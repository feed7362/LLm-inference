services:
  inference:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    networks: [ devnet ]
    ports:
      - "2222:2222"
    container_name: inference_container
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - chroma_data:/data/chroma
    depends_on:
      - postgres
  
  postgres:
    image: postgres:latest
    networks: [ devnet ]
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/data/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped

volumes:
  chroma_data:
  postgres_data:

networks:
  devnet:

# docker compose --env-file ./.env -f ./.devcontainer/docker-compose.yml build 
# docker compose --env-file ./.env -f ./.devcontainer/docker-compose.yml up -d